# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
version: 2

project_name: "dr"

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - <<: &build_defaults
      env:
        - CGO_ENABLED=0

      binary: "dr"
      mod_timestamp: "{{ .CommitTimestamp }}"

      ldflags:
        - >
          -s -w
          -X "github.com/datarobot/cli/internal/version.Version={{ .Tag }}"
          -X "github.com/datarobot/cli/internal/version.GitCommit={{ .ShortCommit }}"
          -X "github.com/datarobot/cli/internal/version.BuildDate={{ .CommitDate }}"

      goarch:
        - amd64
        - arm
        - arm64
        - ppc64le
        - s390x
        - riscv64

      goarm:
        - '7'
        - '6'
    id: linux
    goos: linux

  - <<: *build_defaults
    id: darwin
    goos: darwin
    ignore:
      - goos: darwin
        goarch: '386'

  - <<: *build_defaults
    id: freebsd
    goos: freebsd
    ignore:
      - goos: freebsd
        goarch: arm
      - goos: freebsd
        goarch: arm64

  - <<: *build_defaults
    id: openbsd
    goos: openbsd
    ignore:
      - goos: openbsd
        goarch: arm
      - goos: openbsd
        goarch: arm64

  - <<: *build_defaults
    id: windows
    goos: windows
    ignore:
      - goos: windows
        goarch: arm


archives:
  - formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_v{{ .Version }}_{{- title .Os }}_{{- if eq .Arch "amd64" }}x86_64{{- else if eq .Arch "386" }}i386{{- else }}{{ .Arch }}{{ end }}{{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [zip]

    files:
      - LICENSE.txt
      - CHANGELOG.md

checksum:
  name_template: "{{ .ProjectName }}_v{{ .Version }}_checksums.txt"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  footer: |
    **Full Changelog**: https://github.com/datarobot-oss/cli/compare/{{ .PreviousTag }}...{{ .Tag }}

#binary_signs:
#  - id: trusted-signing-binary
#    cmd: pwsh
#    args:
#      - -c
#      - |
#        Install-Module -Name Microsoft.TrustedSigning -Force
#        Invoke-TrustedSigning -File "${artifact}" `
#          -TrustedSigningAccountName "{{ .Env.AZURE_ACCOUNT_NAME }}" `
#          -CertificateProfileName "{{ .Env.AZURE_CERTIFICATE_PROFILE_NAME }}" `
#          -Verbose
#    # Define the signature output file (optional but good practice)
#    signature: "${artifact}.sig"
#    ids: [windows]

notarize:
  macos:
    - enabled: '{{ isEnvSet "MACOS_SIGN_P12" }}'
      ids: [darwin]
      sign:
        certificate: "{{ .Env.MACOS_SIGN_P12 }}"
        password: "{{ .Env.MACOS_SIGN_PASSWORD }}"
      notarize:
        issuer_id: "{{.Env.MACOS_NOTARY_ISSUER_ID}}"
        key_id: "{{.Env.MACOS_NOTARY_KEY_ID}}"
        key: "{{.Env.MACOS_NOTARY_KEY}}"

        # Whether to wait for the notarization to finish.
        # Not recommended, as it could take a really long time.
        wait: true

        timeout: 20m
